DIGEST f4df1a2fe10d38bfc10d97203a2d0b8d
FLF.ImpCEvalFun
R533:535 Coq.micromega.Lia <> <> lib
R562:566 Coq.Arith.Arith <> <> lib
R593:600 Coq.Arith.PeanoNat <> <> lib
R610:612 Coq.Arith.PeanoNat Nat <> mod
R639:643 Coq.Arith.EqNat <> <> lib
R669:671 LF.Imp <> <> lib
R673:676 LF.Maps <> <> lib
def 782:792 <> ceval_step1
R800:804 LF.Imp <> state def
binder 795:796 <> st:1
R812:814 LF.Imp <> com ind
binder 808:808 <> c:2
R819:823 LF.Imp <> state def
R836:836 LF.ImpCEvalFun <> c:2 var
R849:851 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R856:858 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R852:855 LF.Imp <> :com:com_scope:'skip' not
R871:872 LF.ImpCEvalFun <> st:1 var
R880:882 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R890:892 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R884:887 LF.Imp <> :com:com_scope:x_':='_x not
R907:911 LF.Maps <> :::x_'!->'_x_';'_x not
R923:925 LF.Maps <> :::x_'!->'_x_';'_x not
R926:927 LF.ImpCEvalFun <> st:1 var
R912:916 LF.Imp <> aeval def
R918:919 LF.ImpCEvalFun <> st:1 var
R936:938 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R946:948 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R941:943 LF.Imp <> :com:com_scope:x_';'_x not
R972:982 LF.ImpCEvalFun <> ceval_step1:3 def
R984:985 LF.ImpCEvalFun <> st:1 var
binder 965:967 <> st':5
R1001:1011 LF.ImpCEvalFun <> ceval_step1:3 def
R1013:1015 LF.ImpCEvalFun <> st':5 var
R1026:1028 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1053:1055 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1029:1031 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1033:1038 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1041:1046 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1049:1052 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1072:1076 LF.Imp <> beval def
R1078:1079 LF.ImpCEvalFun <> st:1 var
R1132:1142 LF.ImpCEvalFun <> ceval_step1:3 def
R1144:1145 LF.ImpCEvalFun <> st:1 var
R1099:1109 LF.ImpCEvalFun <> ceval_step1:3 def
R1111:1112 LF.ImpCEvalFun <> st:1 var
R1156:1158 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1177:1179 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1159:1164 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1167:1170 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1173:1176 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1192:1193 LF.ImpCEvalFun <> st:1 var
def 3206:3216 <> ceval_step2
R3224:3228 LF.Imp <> state def
binder 3219:3220 <> st:6
R3236:3238 LF.Imp <> com ind
binder 3232:3232 <> c:7
R3246:3248 Coq.Init.Datatypes <> nat ind
binder 3242:3242 <> i:8
R3253:3257 LF.Imp <> state def
R3270:3270 LF.ImpCEvalFun <> i:8 var
R3281:3281 Coq.Init.Datatypes <> O constr
R3286:3293 LF.Imp <> empty_st def
R3299:3299 Coq.Init.Datatypes <> S constr
R3317:3317 LF.ImpCEvalFun <> c:7 var
R3332:3334 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3339:3341 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3335:3338 LF.Imp <> :com:com_scope:'skip' not
R3356:3357 LF.ImpCEvalFun <> st:6 var
R3367:3369 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3377:3379 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3371:3374 LF.Imp <> :com:com_scope:x_':='_x not
R3396:3400 LF.Maps <> :::x_'!->'_x_';'_x not
R3412:3414 LF.Maps <> :::x_'!->'_x_';'_x not
R3415:3416 LF.ImpCEvalFun <> st:6 var
R3401:3405 LF.Imp <> aeval def
R3407:3408 LF.ImpCEvalFun <> st:6 var
R3427:3429 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3437:3439 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3432:3434 LF.Imp <> :com:com_scope:x_';'_x not
R3465:3475 LF.ImpCEvalFun <> ceval_step2:9 def
R3477:3478 LF.ImpCEvalFun <> st:6 var
binder 3458:3460 <> st':12
R3499:3509 LF.ImpCEvalFun <> ceval_step2:9 def
R3511:3513 LF.ImpCEvalFun <> st':12 var
R3529:3531 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3556:3558 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3532:3534 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3536:3541 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3544:3549 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3552:3555 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3577:3581 LF.Imp <> beval def
R3583:3584 LF.ImpCEvalFun <> st:6 var
R3644:3654 LF.ImpCEvalFun <> ceval_step2:9 def
R3656:3657 LF.ImpCEvalFun <> st:6 var
R3606:3616 LF.ImpCEvalFun <> ceval_step2:9 def
R3618:3619 LF.ImpCEvalFun <> st:6 var
R3673:3675 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3694:3696 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3676:3681 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3684:3687 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3690:3693 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3715:3719 LF.Imp <> beval def
R3721:3722 LF.ImpCEvalFun <> st:6 var
R3829:3830 LF.ImpCEvalFun <> st:6 var
R3754:3764 LF.ImpCEvalFun <> ceval_step2:9 def
R3766:3767 LF.ImpCEvalFun <> st:6 var
binder 3747:3749 <> st':13
R3793:3803 LF.ImpCEvalFun <> ceval_step2:9 def
R3809:3809 LF.ImpCEvalFun <> c:7 var
R3805:3807 LF.ImpCEvalFun <> st':13 var
def 3857:3867 <> ceval_step3
R3875:3879 LF.Imp <> state def
binder 3870:3871 <> st:14
R3887:3889 LF.Imp <> com ind
binder 3883:3883 <> c:15
R3897:3899 Coq.Init.Datatypes <> nat ind
binder 3893:3893 <> i:16
R3924:3929 Coq.Init.Datatypes <> option ind
R3931:3935 LF.Imp <> state def
R3948:3948 LF.ImpCEvalFun <> i:16 var
R3959:3959 Coq.Init.Datatypes <> O constr
R3964:3967 Coq.Init.Datatypes <> None constr
R3973:3973 Coq.Init.Datatypes <> S constr
R3991:3991 LF.ImpCEvalFun <> c:15 var
R4006:4008 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4013:4015 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4009:4012 LF.Imp <> :com:com_scope:'skip' not
R4030:4033 Coq.Init.Datatypes <> Some constr
R4035:4036 LF.ImpCEvalFun <> st:14 var
R4046:4048 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4056:4058 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4050:4053 LF.Imp <> :com:com_scope:x_':='_x not
R4073:4076 Coq.Init.Datatypes <> Some constr
R4080:4084 LF.Maps <> :::x_'!->'_x_';'_x not
R4096:4098 LF.Maps <> :::x_'!->'_x_';'_x not
R4099:4100 LF.ImpCEvalFun <> st:14 var
R4085:4089 LF.Imp <> aeval def
R4091:4092 LF.ImpCEvalFun <> st:14 var
R4111:4113 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4121:4123 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4116:4118 LF.Imp <> :com:com_scope:x_';'_x not
R4145:4155 LF.ImpCEvalFun <> ceval_step3:17 def
R4157:4158 LF.ImpCEvalFun <> st:14 var
R4184:4187 Coq.Init.Datatypes <> Some constr
R4196:4206 LF.ImpCEvalFun <> ceval_step3:17 def
R4230:4233 Coq.Init.Datatypes <> None constr
R4238:4241 Coq.Init.Datatypes <> None constr
R4265:4267 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4292:4294 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4268:4270 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R4272:4277 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R4280:4285 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R4288:4291 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R4313:4317 LF.Imp <> beval def
R4319:4320 LF.ImpCEvalFun <> st:14 var
R4380:4390 LF.ImpCEvalFun <> ceval_step3:17 def
R4392:4393 LF.ImpCEvalFun <> st:14 var
R4342:4352 LF.ImpCEvalFun <> ceval_step3:17 def
R4354:4355 LF.ImpCEvalFun <> st:14 var
R4409:4411 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4430:4432 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4412:4417 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R4420:4423 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R4426:4429 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R4451:4455 LF.Imp <> beval def
R4457:4458 LF.ImpCEvalFun <> st:14 var
R4627:4630 Coq.Init.Datatypes <> Some constr
R4632:4633 LF.ImpCEvalFun <> st:14 var
R4486:4496 LF.ImpCEvalFun <> ceval_step3:17 def
R4498:4499 LF.ImpCEvalFun <> st:14 var
R4530:4533 Coq.Init.Datatypes <> Some constr
R4542:4552 LF.ImpCEvalFun <> ceval_step3:17 def
R4558:4558 LF.ImpCEvalFun <> c:15 var
R4580:4583 Coq.Init.Datatypes <> None constr
R4588:4591 Coq.Init.Datatypes <> None constr
R4904:4907 Coq.Init.Datatypes <> Some constr
R4928:4931 Coq.Init.Datatypes <> None constr
R4936:4939 Coq.Init.Datatypes <> None constr
not 4844:4844 <> :::'LETOPT'_x_'<=='_x_'IN'_x
def 5002:5011 <> ceval_step
R5019:5023 LF.Imp <> state def
binder 5014:5015 <> st:20
R5031:5033 LF.Imp <> com ind
binder 5027:5027 <> c:21
R5041:5043 Coq.Init.Datatypes <> nat ind
binder 5037:5037 <> i:22
R5068:5073 Coq.Init.Datatypes <> option ind
R5075:5079 LF.Imp <> state def
R5092:5092 LF.ImpCEvalFun <> i:22 var
R5103:5103 Coq.Init.Datatypes <> O constr
R5108:5111 Coq.Init.Datatypes <> None constr
R5117:5117 Coq.Init.Datatypes <> S constr
R5135:5135 LF.ImpCEvalFun <> c:21 var
R5150:5152 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5157:5159 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5153:5156 LF.Imp <> :com:com_scope:'skip' not
R5174:5177 Coq.Init.Datatypes <> Some constr
R5179:5180 LF.ImpCEvalFun <> st:20 var
R5190:5192 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5200:5202 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5194:5197 LF.Imp <> :com:com_scope:x_':='_x not
R5217:5220 Coq.Init.Datatypes <> Some constr
R5224:5228 LF.Maps <> :::x_'!->'_x_';'_x not
R5240:5242 LF.Maps <> :::x_'!->'_x_';'_x not
R5243:5244 LF.ImpCEvalFun <> st:20 var
R5229:5233 LF.Imp <> aeval def
R5235:5236 LF.ImpCEvalFun <> st:20 var
R5255:5257 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5265:5267 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5260:5262 LF.Imp <> :com:com_scope:x_';'_x not
R5282:5288 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5292:5296 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5316:5329 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5297:5306 LF.ImpCEvalFun <> ceval_step:23 def
R5308:5309 LF.ImpCEvalFun <> st:20 var
binder 5289:5291 <> st':26
R5330:5339 LF.ImpCEvalFun <> ceval_step:23 def
R5341:5343 LF.ImpCEvalFun <> st':26 var
R5359:5361 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5386:5388 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5362:5364 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5366:5371 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5374:5379 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5382:5385 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5407:5411 LF.Imp <> beval def
R5413:5414 LF.ImpCEvalFun <> st:20 var
R5473:5482 LF.ImpCEvalFun <> ceval_step:23 def
R5484:5485 LF.ImpCEvalFun <> st:20 var
R5436:5445 LF.ImpCEvalFun <> ceval_step:23 def
R5447:5448 LF.ImpCEvalFun <> st:20 var
R5501:5503 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5522:5524 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5504:5509 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5512:5515 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5518:5521 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5543:5547 LF.Imp <> beval def
R5549:5550 LF.ImpCEvalFun <> st:20 var
R5659:5662 Coq.Init.Datatypes <> Some constr
R5664:5665 LF.ImpCEvalFun <> st:20 var
R5571:5577 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5581:5585 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5605:5623 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R5586:5595 LF.ImpCEvalFun <> ceval_step:23 def
R5597:5598 LF.ImpCEvalFun <> st:20 var
binder 5578:5580 <> st':27
R5624:5633 LF.ImpCEvalFun <> ceval_step:23 def
R5639:5639 LF.ImpCEvalFun <> c:21 var
R5635:5637 LF.ImpCEvalFun <> st':27 var
def 5694:5703 <> test_ceval
R5709:5713 LF.Imp <> state def
binder 5706:5707 <> st:28
R5719:5721 LF.Imp <> com ind
binder 5717:5717 <> c:29
R5735:5744 LF.ImpCEvalFun <> ceval_step def
R5746:5747 LF.ImpCEvalFun <> st:28 var
R5749:5749 LF.ImpCEvalFun <> c:29 var
R5764:5767 Coq.Init.Datatypes <> None constr
R5775:5778 Coq.Init.Datatypes <> None constr
R5784:5787 Coq.Init.Datatypes <> Some constr
R5795:5798 Coq.Init.Datatypes <> Some constr
R5800:5800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5805:5806 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5811:5812 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5817:5817 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5801:5802 LF.ImpCEvalFun <> st:28 var
R5804:5804 LF.Imp <> X def
R5807:5808 LF.ImpCEvalFun <> st:28 var
R5810:5810 LF.Imp <> Y def
R5813:5814 LF.ImpCEvalFun <> st:28 var
R5816:5816 LF.Imp <> Z def
def 5835:5852 <> example_test_ceval
R5972:5980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5861:5870 LF.ImpCEvalFun <> test_ceval def
R5872:5879 LF.Imp <> empty_st def
R5887:5889 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5969:5971 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5896:5905 LF.Imp <> :com:com_scope:x_';'_x not
R5891:5894 LF.Imp <> :com:com_scope:x_':='_x not
R5890:5890 LF.Imp <> X def
R5906:5908 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5917:5930 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5937:5950 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5957:5968 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5909:5909 LF.Imp <> :com:com_scope:'('_x_')' not
R5916:5916 LF.Imp <> :com:com_scope:'('_x_')' not
R5911:5914 LF.Imp <> :com::x_'<='_x not
R5910:5910 LF.Imp <> X def
R5932:5935 LF.Imp <> :com:com_scope:x_':='_x not
R5931:5931 LF.Imp <> Y def
R5952:5955 LF.Imp <> :com:com_scope:x_':='_x not
R5951:5951 LF.Imp <> Z def
R5981:5984 Coq.Init.Datatypes <> Some constr
R5986:5986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5988:5989 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5991:5992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5994:5994 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 6152:6168 <> ceval_step__ceval
binder 6178:6178 <> c:30
binder 6180:6181 <> st:31
binder 6183:6185 <> st':32
R6194:6194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6233:6243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6195:6201 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6203:6204 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6202:6202 <> i:33
R6222:6224 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6205:6214 LF.ImpCEvalFun <> ceval_step def
R6216:6217 LF.ImpCEvalFun <> st:31 var
R6219:6219 LF.ImpCEvalFun <> c:30 var
R6221:6221 LF.ImpCEvalFun <> i:33 var
R6225:6228 Coq.Init.Datatypes <> Some constr
R6230:6232 LF.ImpCEvalFun <> st':32 var
R6246:6249 LF.Imp <> :::x_'=['_x_']=>'_x not
R6251:6255 LF.Imp <> :::x_'=['_x_']=>'_x not
R6250:6250 LF.ImpCEvalFun <> c:30 var
R6244:6245 LF.ImpCEvalFun <> st:31 var
R6256:6258 LF.ImpCEvalFun <> st':32 var
R6640:6645 LF.Imp <> E_Skip constr
R6640:6645 LF.Imp <> E_Skip constr
R6671:6676 LF.Imp <> E_Asgn constr
R6671:6676 LF.Imp <> E_Asgn constr
R6727:6736 LF.ImpCEvalFun <> ceval_step def
R6727:6736 LF.ImpCEvalFun <> ceval_step def
R6828:6832 LF.Imp <> E_Seq constr
R6828:6832 LF.Imp <> E_Seq constr
R7036:7040 LF.Imp <> beval def
R7036:7040 LF.Imp <> beval def
R7099:7106 LF.Imp <> E_IfTrue constr
R7099:7106 LF.Imp <> E_IfTrue constr
R7212:7220 LF.Imp <> E_IfFalse constr
R7212:7220 LF.Imp <> E_IfFalse constr
R7315:7319 LF.Imp <> beval def
R7315:7319 LF.Imp <> beval def
R7382:7391 LF.ImpCEvalFun <> ceval_step def
R7382:7391 LF.ImpCEvalFun <> ceval_step def
R7459:7469 LF.Imp <> E_WhileTrue constr
R7459:7469 LF.Imp <> E_WhileTrue constr
R7738:7749 LF.Imp <> E_WhileFalse constr
R7738:7749 LF.Imp <> E_WhileFalse constr
prf 7778:7792 <> ceval_step_more
binder 7802:7803 <> i1:34
binder 7805:7806 <> i2:35
binder 7808:7809 <> st:36
binder 7811:7813 <> st':37
binder 7815:7815 <> c:38
R7828:7833 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7822:7825 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R7820:7821 LF.ImpCEvalFun <> i1:34 var
R7826:7827 LF.ImpCEvalFun <> i2:35 var
R7863:7868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7852:7854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7834:7843 LF.ImpCEvalFun <> ceval_step def
R7845:7846 LF.ImpCEvalFun <> st:36 var
R7848:7848 LF.ImpCEvalFun <> c:38 var
R7850:7851 LF.ImpCEvalFun <> i1:34 var
R7855:7858 Coq.Init.Datatypes <> Some constr
R7860:7862 LF.ImpCEvalFun <> st':37 var
R7887:7889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7869:7878 LF.ImpCEvalFun <> ceval_step def
R7880:7881 LF.ImpCEvalFun <> st:36 var
R7883:7883 LF.ImpCEvalFun <> c:38 var
R7885:7886 LF.ImpCEvalFun <> i2:35 var
R7890:7893 Coq.Init.Datatypes <> Some constr
R7895:7897 LF.ImpCEvalFun <> st':37 var
R8105:8108 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R8105:8108 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R8350:8359 LF.ImpCEvalFun <> ceval_step def
R8350:8359 LF.ImpCEvalFun <> ceval_step def
R8689:8693 LF.Imp <> beval def
R8689:8693 LF.Imp <> beval def
R8816:8820 LF.Imp <> beval def
R8816:8820 LF.Imp <> beval def
R8861:8870 LF.ImpCEvalFun <> ceval_step def
R8861:8870 LF.ImpCEvalFun <> ceval_step def
prf 9172:9188 <> ceval__ceval_step
binder 9198:9198 <> c:39
binder 9200:9201 <> st:40
binder 9203:9205 <> st':41
R9229:9238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9216:9219 LF.Imp <> :::x_'=['_x_']=>'_x not
R9221:9225 LF.Imp <> :::x_'=['_x_']=>'_x not
R9220:9220 LF.ImpCEvalFun <> c:39 var
R9214:9215 LF.ImpCEvalFun <> st:40 var
R9226:9228 LF.ImpCEvalFun <> st':41 var
R9239:9245 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9247:9248 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 9246:9246 <> i:42
R9266:9268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9249:9258 LF.ImpCEvalFun <> ceval_step def
R9260:9261 LF.ImpCEvalFun <> st:40 var
R9263:9263 LF.ImpCEvalFun <> c:39 var
R9265:9265 LF.ImpCEvalFun <> i:42 var
R9269:9272 Coq.Init.Datatypes <> Some constr
R9274:9276 LF.ImpCEvalFun <> st':41 var
prf 9366:9394 <> ceval_and_ceval_step_coincide
binder 9404:9404 <> c:43
binder 9406:9407 <> st:44
binder 9409:9411 <> st':45
R9435:9441 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9422:9425 LF.Imp <> :::x_'=['_x_']=>'_x not
R9427:9431 LF.Imp <> :::x_'=['_x_']=>'_x not
R9426:9426 LF.ImpCEvalFun <> c:43 var
R9420:9421 LF.ImpCEvalFun <> st:44 var
R9432:9434 LF.ImpCEvalFun <> st':45 var
R9442:9448 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9450:9451 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 9449:9449 <> i:46
R9469:9471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9452:9461 LF.ImpCEvalFun <> ceval_step def
R9463:9464 LF.ImpCEvalFun <> st:44 var
R9466:9466 LF.ImpCEvalFun <> c:43 var
R9468:9468 LF.ImpCEvalFun <> i:46 var
R9472:9475 Coq.Init.Datatypes <> Some constr
R9477:9479 LF.ImpCEvalFun <> st':45 var
R9523:9539 LF.ImpCEvalFun <> ceval__ceval_step prfax
R9523:9539 LF.ImpCEvalFun <> ceval__ceval_step prfax
R9548:9564 LF.ImpCEvalFun <> ceval_step__ceval thm
R9548:9564 LF.ImpCEvalFun <> ceval_step__ceval thm
prf 9879:9898 <> ceval_deterministic'
binder 9909:9909 <> c:47
binder 9911:9912 <> st:48
binder 9914:9916 <> st1:49
binder 9918:9920 <> st2:50
R9943:9951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9930:9933 LF.Imp <> :::x_'=['_x_']=>'_x not
R9935:9939 LF.Imp <> :::x_'=['_x_']=>'_x not
R9934:9934 LF.ImpCEvalFun <> c:47 var
R9928:9929 LF.ImpCEvalFun <> st:48 var
R9940:9942 LF.ImpCEvalFun <> st1:49 var
R9967:9975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9954:9957 LF.Imp <> :::x_'=['_x_']=>'_x not
R9959:9963 LF.Imp <> :::x_'=['_x_']=>'_x not
R9958:9958 LF.ImpCEvalFun <> c:47 var
R9952:9953 LF.ImpCEvalFun <> st:48 var
R9964:9966 LF.ImpCEvalFun <> st2:50 var
R9979:9981 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9976:9978 LF.ImpCEvalFun <> st1:49 var
R9982:9984 LF.ImpCEvalFun <> st2:50 var
R10033:10049 LF.ImpCEvalFun <> ceval__ceval_step prfax
R10033:10049 LF.ImpCEvalFun <> ceval__ceval_step prfax
R10067:10083 LF.ImpCEvalFun <> ceval__ceval_step prfax
R10067:10083 LF.ImpCEvalFun <> ceval__ceval_step prfax
R10187:10189 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R10157:10171 LF.ImpCEvalFun <> ceval_step_more thm
R10187:10189 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R10157:10171 LF.ImpCEvalFun <> ceval_step_more thm
R10239:10241 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R10209:10223 LF.ImpCEvalFun <> ceval_step_more thm
R10239:10241 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R10209:10223 LF.ImpCEvalFun <> ceval_step_more thm
